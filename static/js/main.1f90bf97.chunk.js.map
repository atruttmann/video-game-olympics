{"version":3,"sources":["components/Switch/Switch.js","components/Countdown.js","logo.jpg","App.js","index.js"],"names":["Switch","toggleSwitch","children","className","type","onClick","Countdown","winner","useState","hours","setHours","minutes","setMinutes","seconds","setSeconds","customStatus","setCustomStatus","useEffect","startTime","Date","parse","endTime","updateClock","currentTime","now","t","getTime","Math","floor","interval","setInterval","clearInterval","getFormattedTime","time","App","leaderboard","setLeaderboard","challenges","setChallenges","hideCompletedChallenges","setHideCompletedChallenges","doc","GoogleSpreadsheet","creds","require","fetchData","a","useServiceAccountAuth","loadInfo","leaderboardSheet","sheetsByIndex","getRows","playerRows","map","row","name","Name","points","Points","avatar","Avatar","lockedGames","achievements","Achievements","sort","b","challengesSheet","challengeRows","icon","goldVal","goldWinner","silverVal","silverWinner","bronzeVal","bronzeWinner","getMedal","index","src","Logo","alt","length","player","challenge","completed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f90bf97.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Switch.scss\";\r\n\r\nconst Switch = ({ toggleSwitch = () => {}, children }) => (\r\n  <div className=\"switchContainer\">\r\n    <label className=\"switch\">\r\n      <input type=\"checkbox\" onClick={() => toggleSwitch()} />\r\n      <span className=\"slider\" />\r\n    </label>\r\n    <span>{children}</span>\r\n  </div>\r\n);\r\n\r\nexport default Switch;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst Countdown = ({ winner }) => {\r\n  const [hours, setHours] = useState();\r\n  const [minutes, setMinutes] = useState();\r\n  const [seconds, setSeconds] = useState();\r\n  const [customStatus, setCustomStatus] = useState(\" \");\r\n\r\n  useEffect(() => {\r\n    // Note that when it's regular (non-daylight savings) time it should be GMT-0800\r\n    // Make sure to use military time\r\n    const startTime = Date.parse(\"Dec 10, 2022 17:30:00 GMT-0700\");\r\n    const endTime = Date.parse(\"Dec 10, 2022 19:30:00 GMT-0700\");\r\n\r\n    const updateClock = () => {\r\n      const currentTime = Date.now();\r\n\r\n      if (currentTime < startTime) {\r\n        setCustomStatus(\"Game has not started.\");\r\n      } else if (currentTime > endTime) {\r\n        setCustomStatus(`Game over!${winner ? ` ${winner} wins.` : \"\"}`);\r\n      } else {\r\n        const t = endTime - new Date().getTime();\r\n        const seconds = Math.floor((t / 1000) % 60);\r\n        const minutes = Math.floor((t / 1000 / 60) % 60);\r\n        const hours = Math.floor((t / (1000 * 60 * 60)) % 24);\r\n\r\n        setHours(hours);\r\n        setMinutes(minutes);\r\n        setSeconds(seconds);\r\n        setCustomStatus(null);\r\n      }\r\n    };\r\n\r\n    updateClock();\r\n    const interval = setInterval(updateClock, 1000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [winner]);\r\n\r\n  const getFormattedTime = (time) => {\r\n    if (time < 10) return `0${time}`;\r\n    return time;\r\n  };\r\n\r\n  return (\r\n    <div className=\"countdown section\">\r\n      {customStatus ? (\r\n        <h2 className=\"customStatus\">{customStatus}</h2>\r\n      ) : (\r\n        <>\r\n          <div className=\"timeItem\">\r\n            <div className=\"time\">{getFormattedTime(hours)}</div>\r\n            Hours\r\n          </div>\r\n          <div className=\"timeItem\">\r\n            <div className=\"time\">{getFormattedTime(minutes)}</div>\r\n            Minutes\r\n          </div>\r\n          <div className=\"timeItem\">\r\n            <div className=\"time\">{getFormattedTime(seconds)}</div>\r\n            Seconds\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Countdown;\r\n","export default __webpack_public_path__ + \"static/media/logo.7fa2e432.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport Switch from \"./components/Switch/Switch\";\r\nimport Countdown from \"./components/Countdown\";\r\nimport Logo from \"./logo.jpg\";\r\nimport \"./App.scss\";\r\n\r\nconst App = () => {\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n  const [challenges, setChallenges] = useState([]);\r\n  const [hideCompletedChallenges, setHideCompletedChallenges] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Initialize the sheet - doc ID is the long id in the sheets URL\r\n    const doc = new GoogleSpreadsheet(\r\n      \"1KH5Oyg_QoBin8Bq9Jx5Q3VxfjKtVMD2DKN4Nbk7FwYo\"\r\n    );\r\n    const creds = require(\"./config/video-game-olympics-a99675815598.json\"); // file with api key\r\n\r\n    const fetchData = async () => {\r\n      await doc.useServiceAccountAuth(creds);\r\n      await doc.loadInfo(); // loads document properties and worksheets\r\n\r\n      const leaderboardSheet = doc.sheetsByIndex[0];\r\n      const playerRows = await leaderboardSheet.getRows();\r\n      setLeaderboard(\r\n        playerRows\r\n          .map((row) => ({\r\n            name: row.Name,\r\n            points: row.Points,\r\n            avatar: row.Avatar,\r\n            lockedGames: row[\"Locked Games\"],\r\n            achievements: row.Achievements,\r\n          }))\r\n          .sort((a, b) => b.points - a.points)\r\n      );\r\n\r\n      const challengesSheet = doc.sheetsByIndex[1];\r\n      const challengeRows = await challengesSheet.getRows();\r\n      setChallenges(\r\n        challengeRows.map((row) => ({\r\n          name: row[\"Challenge Name\"],\r\n          type: row[\"Challenge Type\"],\r\n          icon: row[\"Challenge Icon\"],\r\n          goldVal: row[\"Gold Point Value\"],\r\n          goldWinner: row[\"Gold Winner Name\"] ?? \"\",\r\n          silverVal: row[\"Silver Point Value\"],\r\n          silverWinner: row[\"Silver Winner Name\"] ?? \"\",\r\n          bronzeVal: row[\"Bronze Point Value\"],\r\n          bronzeWinner: row[\"Bronze Winner Name\"] ?? \"\",\r\n        }))\r\n      );\r\n    };\r\n\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 5000); // pull data every 5 seconds\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  const getMedal = (index) => {\r\n    switch (index) {\r\n      case 0:\r\n        return \"🥇\";\r\n      case 1:\r\n        return \"🥈\";\r\n      case 2:\r\n        return \"🥉\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"header\">\r\n        <img src={Logo} className=\"logo\" alt=\"Olympic rings logo\" />\r\n        <h1>Video Game Olympics</h1>\r\n      </div>\r\n\r\n      {leaderboard.length > 0 && challenges.length > 0 ? (\r\n        <>\r\n          <Countdown winner={leaderboard[0]?.name} />\r\n\r\n          <div className=\"leaderboard section\">\r\n            <h2>Leaderboard</h2>\r\n            <div className=\"tableContainer\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"medal\" />\r\n                    <th className=\"points\">Points</th>\r\n                    <th>Player</th>\r\n                    <th>Achievements</th>\r\n                    <th>🔒 Locked Games</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {leaderboard.map((player, index) => (\r\n                    <tr key={player.name}>\r\n                      <td className=\"medal\">\r\n                        {player.points > 0 && getMedal(index)}\r\n                      </td>\r\n                      <td className=\"alignCenter points\">{player.points}</td>\r\n                      <td>\r\n                        <div className=\"playerName\">\r\n                          <img className=\"avatar\" src={player.avatar} alt=\"\" />\r\n                          {player.name}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"small\">{player.achievements}</td>\r\n                      <td className=\"small\">\r\n                        <i>{player.lockedGames}</i>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"challenges section\">\r\n            <h2>All challenges</h2>\r\n            <Switch\r\n              toggleSwitch={() =>\r\n                setHideCompletedChallenges(!hideCompletedChallenges)\r\n              }\r\n            >\r\n              Hide completed challenges\r\n            </Switch>\r\n            <div className=\"tableContainer\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Challenge Name</th>\r\n                    <th className=\"alignCenter\">🥇</th>\r\n                    <th>Winner</th>\r\n                    <th className=\"alignCenter\">🥈</th>\r\n                    <th>Winner</th>\r\n                    <th className=\"alignCenter\">🥉</th>\r\n                    <th>Winner</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {challenges.map((challenge) => {\r\n                    const completed = challenge.bronzeWinner !== \"\";\r\n                    if (completed && hideCompletedChallenges) return null;\r\n\r\n                    return (\r\n                      <tr\r\n                        key={challenge.name}\r\n                        className={completed ? \"completed\" : \"\"}\r\n                      >\r\n                        <td>\r\n                          <div className=\"challengeDetails\">\r\n                            <img className=\"icon\" src={challenge.icon} alt=\"\" />\r\n                            {challenge.name}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"alignCenter\">{challenge.goldVal}</td>\r\n                        <td>{challenge.goldWinner}</td>\r\n                        <td className=\"alignCenter\">{challenge.silverVal}</td>\r\n                        <td>{challenge.silverWinner}</td>\r\n                        <td className=\"alignCenter\">{challenge.bronzeVal}</td>\r\n                        <td>{challenge.bronzeWinner}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <h2 className=\"loading\">Loading...</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}